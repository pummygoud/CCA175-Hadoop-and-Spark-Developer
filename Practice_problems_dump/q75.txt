QUESTION 75 CORRECT TEXT Problem Scenario 78 : 
You have been given MySQL DB with following details. 
user=retail_dba 
password=cloudera 
database=retail_db 
table=retail_db.orders 
table=retail_db.order_items 
jdbc URL = jdbc:mysql://quickstart:3306/retail_db 
Columns of order table : (orderid , order_date , order_customer_id, order_status) 
Columns of ordeMtems table : (order_item_td , order_item_order_id , order_item_product_id, order_item_quantity,order_item_subtotal,order_item_product_price) 

Please accomplish following activities. 

1. Copy "retail_db.orders" and "retail_db.order_items" table to hdfs in respective directory p92_orders and p92_order_items .

sqoop-import \
--connect jdbc:mysql://ms.itversity.com:3306/retail_db \
--username retail_user \
--password itversity \
--table orders \
--target-dir /user/shwetatanwar13/p92_orders

sqoop-import \
--connect jdbc:mysql://ms.itversity.com:3306/retail_db \
--username retail_user \
--password itversity \
--table orders_items \
--target-dir /user/shwetatanwar13/p92_order_items

sqoop-import \
--connect jdbc:mysql://quickstart.cloudera:3306/retail_db \
--username retail_dba \
--password cloudera \
--table orders \
--target-dir /user/cloudera/p92_orders

hdfs dfs -ls /user/cloudera/p92_orders/

sqoop-import \
--connect jdbc:mysql://quickstart.cloudera:3306/retail_db \
--username retail_dba \
--password cloudera \
--table order_items \
--target-dir /user/cloudera/p92_order_items

hdfs dfs -ls /user/cloudera/p92_order_items/

sqoop-eval \
--connect jdbc:mysql://quickstart.cloudera:3306/retail_db \
--username retail_dba \
--password cloudera \
--query "select * from orders limit 5"

sqoop-eval \
--connect jdbc:mysql://quickstart.cloudera:3306/retail_db \
--username retail_dba \
--password cloudera \
--query "select * from order_items limit 5"



2. Join these data using order_id in Spark and Python


orderRDD=sc.textFile("/user/cloudera/p92_orders").map(lambda x:(x.split(',')[0],(x.split(',')[1],x.split(',')[2],x.split(',')[3])))
order_itemsRDD=sc.textFile("/user/cloudera/p92_order_items").map(lambda x:(x.split(',')[1],(x.split(',')[0],x.split(',')[2],x.split(',')[4],x.split(',')[5])))
order_itemsRDD.take(5)

orderRDD=sc.textFile("/user/cloudera/p92_orders")
order_itemsRDD=sc.textFile("/user/cloudera/p92_order_items")

joinRDD=orderRDD.join(order_itemsRDD)

joinRDD.take(5)

orderDF=sqlContext.createDataFrame(orderRDD,['order_id','order_date','order_customer_id','order_status'])
joinRDD=orderRDD


3. Calculate total revenue perday and per customer 

from pyspark.sql import Row

orderDF=sc.textFile("/user/cloudera/p92_orders").map(lambda x:Row(order_id=int(x.split(',')[0]),order_date=x.split(',')[1], \
order_customer_id=int(x.split(',')[2]),order_status=x.split(',')[3])

 order_item_id | order_item_order_id | order_item_product_id | order_item_quantity | order_item_subtotal | order_item_product_price

order_itemsDF=sc.textFile("/user/cloudera/p92_order_items"). \
map(lambda x:Row(order_item_id=int(x.split(',')[0]), \
order_item_order_id=int(x.split(',')[1]), \
order_item_product_id=int(x.split(',')[2]),order_item_quantity=int(x.split(',')[3]), \
order_item_subtotal=float(x.split(',')[4]),order_item_product_price=float(x.split(',')[5]))) \
.toDF()

order_itemsDF.registerTempTable("order_items")
orderDF.registerTempTable("orders")

sqlContext.sql("select order_date,order_customer_id, round(sum(order_item_subtotal),2) total_revenue \
from  order_items oi,orders o \
where oi.order_item_order_id=o.order_id \
group by order_date,order_customer_id \
order by order_customer_id,order_date").show()

4. Calculate maximum revenue per customer

sqlContext.sql("select order_customer_id,max(order_item_subtotal) \
from order_items oi, orders o \
where oi.order_item_order_id=o.order_id \
group by order_customer_id \
order by order_customer_id").show()